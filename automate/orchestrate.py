import os

# body of the trace_def.tla file
# this needs to be rewritten for each log file
def trace_def(path):
  return '''\
---- MODULE trace_def ----

EXTENDS Naturals, Sequences, Parser

Trace == parse({path})

==========================
'''.format(path=path)

# if the logged trace conforms to the spec, we will get an invariant violation
expected = 'Error: Invariant NotTraceFinished is violated.'

rootDir = '../log'
for _, _, fileList in os.walk(rootDir):
  # traverse the log directory
  for fname in fileList:
    # write ../tla/trace_def.tla
    os.chdir('../tla')
    cwd = os.getcwd() + '/'
    fw = open(cwd + 'trace_def.tla', "w")
    fw.write(trace_def('\"../log/{fname}\"'.format(fname=fname)))
    fw.close()
    # run tlc with the supplied trace
    os.system('tlc trace.tla -deadlock > ../results/{fname}'.format(fname=fname))
    # currently in ../tla
    os.chdir('../results')
    # read tlc result and check for NotTraceFinished invariant violation
    cwd = os.getcwd() + '/'
    fr = open(cwd + fname, "r")
    contents = fr.read()
    res = expected in contents
    if res:
      color = '\x1b[38;5;2m' # green
    else:
      color = '\x1b[38;5;1m' # red
    print(color + '{fname}: {res}'.format(fname=fname, res=res))
    fr.close()

# delete the states directory generated by tlc
os.system('rm -r ../tla/states')
